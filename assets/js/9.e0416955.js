(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{333:function(t,v,_){"use strict";_.r(v);var l=_(33),i=Object(l.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"rabbitmq-概述"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq-概述"}},[t._v("#")]),t._v(" RabbitMQ 概述")]),t._v(" "),_("ul",[_("li",[t._v("AMQP 高级消息队列协议")]),t._v(" "),_("li",[t._v("松耦合")]),t._v(" "),_("li",[t._v("单点问题")])]),t._v(" "),_("p",[t._v("松耦合应用使得原本把数据直接存在数据库中的应用能够把数据发送到rabbitmq，从而实现数据的异步处理。")]),t._v(" "),_("p",[t._v("如果数据库负载过大，可以对消费者进行限流或者直接关闭。消息会保存在队列中。")]),t._v(" "),_("p",[t._v("这种架构同样允许rabbitmq对同一份数据进行重复利用。类似于广播，可以将详细群发到不同的服务进行处理。")]),t._v(" "),_("ul",[_("li",[t._v("解耦")]),t._v(" "),_("li",[t._v("异步")]),t._v(" "),_("li",[t._v("流量削峰")])]),t._v(" "),_("p",[t._v("系统可用性降低 系统引入的外部依赖越多，越容易挂掉。")]),t._v(" "),_("ul",[_("li",[t._v("连接")]),t._v(" "),_("li",[t._v("信道")]),t._v(" "),_("li",[t._v("交换器")]),t._v(" "),_("li",[t._v("队列")])])])}),[],!1,null,null,null);v.default=i.exports}}]);