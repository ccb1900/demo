(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{443:function(a,t,s){"use strict";s.r(t);var r=s(43),h=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"常见面试题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见面试题"}},[a._v("#")]),a._v(" 常见面试题")]),a._v(" "),s("p",[a._v("业务中用到的很多东西，其实基础里面都有讲述，引申扩展一下就可以了。")]),a._v(" "),s("h2",{attrs:{id:"数据结构与算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构与算法"}},[a._v("#")]),a._v(" 数据结构与算法")]),a._v(" "),s("h3",{attrs:{id:"b-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树"}},[a._v("#")]),a._v(" b+树")]),a._v(" "),s("h3",{attrs:{id:"红黑树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#红黑树"}},[a._v("#")]),a._v(" 红黑树")]),a._v(" "),s("h3",{attrs:{id:"跳表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跳表"}},[a._v("#")]),a._v(" 跳表")]),a._v(" "),s("h3",{attrs:{id:"动态规划"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态规划"}},[a._v("#")]),a._v(" 动态规划")]),a._v(" "),s("h3",{attrs:{id:"优先队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优先队列"}},[a._v("#")]),a._v(" 优先队列")]),a._v(" "),s("p",[a._v("可以快速找出最大值或最小值")]),a._v(" "),s("h3",{attrs:{id:"平衡树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#平衡树"}},[a._v("#")]),a._v(" 平衡树")]),a._v(" "),s("h3",{attrs:{id:"哈希"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#哈希"}},[a._v("#")]),a._v(" 哈希")]),a._v(" "),s("h2",{attrs:{id:"安全"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[a._v("#")]),a._v(" 安全")]),a._v(" "),s("h3",{attrs:{id:"csrf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[a._v("#")]),a._v(" csrf")]),a._v(" "),s("h3",{attrs:{id:"xss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[a._v("#")]),a._v(" xss")]),a._v(" "),s("h3",{attrs:{id:"中间人攻击"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中间人攻击"}},[a._v("#")]),a._v(" 中间人攻击")]),a._v(" "),s("h2",{attrs:{id:"数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[a._v("#")]),a._v(" 数据库")]),a._v(" "),s("h3",{attrs:{id:"索引"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),s("p",[a._v("索引的本质不考虑数据结构，那就是有序，方便查找。\n一个有序的序列有什么性质呢？针对某个字段或者或者某几个字段建立了索引，也就是可比较的，很自然的未加入索引的，\n或者顺序和索引不一致的就无法命中了。")]),a._v(" "),s("h4",{attrs:{id:"索引的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的分类"}},[a._v("#")]),a._v(" 索引的分类")]),a._v(" "),s("h4",{attrs:{id:"索引的优化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#索引的优化"}},[a._v("#")]),a._v(" 索引的优化")]),a._v(" "),s("h3",{attrs:{id:"事务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[a._v("#")]),a._v(" 事务")]),a._v(" "),s("h4",{attrs:{id:"实现机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现机制"}},[a._v("#")]),a._v(" 实现机制")]),a._v(" "),s("p",[a._v("理解事务的实现机制，就可以很自然的衍生出分布式事务的机制")]),a._v(" "),s("h4",{attrs:{id:"隔离级别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#隔离级别"}},[a._v("#")]),a._v(" 隔离级别")]),a._v(" "),s("h3",{attrs:{id:"innodb引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#innodb引擎"}},[a._v("#")]),a._v(" innodb引擎")]),a._v(" "),s("h2",{attrs:{id:"redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis"}},[a._v("#")]),a._v(" redis")]),a._v(" "),s("h3",{attrs:{id:"数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[a._v("#")]),a._v(" 数据结构")]),a._v(" "),s("h3",{attrs:{id:"底层数据结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#底层数据结构"}},[a._v("#")]),a._v(" 底层数据结构")]),a._v(" "),s("h2",{attrs:{id:"协议"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协议"}},[a._v("#")]),a._v(" 协议")]),a._v(" "),s("p",[a._v("协议就是按照约定的格式交换数据。")]),a._v(" "),s("p",[a._v("比如http，在TCP连接后，会发送很多行的消息头+消息体的数据，服务器收到后，进行解析，解析完成按照\n协议约定的格式返回数据（响应头+响应体），浏览器收到后，对二者进行解析，然后渲染页面。")]),a._v(" "),s("h3",{attrs:{id:"https"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[a._v("#")]),a._v(" https")]),a._v(" "),s("h4",{attrs:{id:"tcp-握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tcp-握手"}},[a._v("#")]),a._v(" TCP 握手")]),a._v(" "),s("p",[a._v("首先建立TCP连接")]),a._v(" "),s("h4",{attrs:{id:"tls-握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tls-握手"}},[a._v("#")]),a._v(" TLS 握手")]),a._v(" "),s("p",[a._v("服务器都需要配置证书，公钥和私钥。")]),a._v(" "),s("p",[a._v("公钥用于信息加密，客户端使用。")]),a._v(" "),s("p",[a._v("私钥用于信息解密，服务器使用。")]),a._v(" "),s("p",[a._v("有了https，就不会被运营商植入广告啦。")]),a._v(" "),s("p",[a._v("服务器的证书是第三方签发的，所以客户端可以通过向第三方发起证书真实性的验证，保证不被篡改。")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2014/02/ssl_tls.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.ruanyifeng.com/blog/2014/02/ssl_tls.html"),s("OutboundLink")],1)]),a._v(" "),s("h5",{attrs:{id:"过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[a._v("#")]),a._v(" 过程")]),a._v(" "),s("p",[a._v("实际使用的是对称加密。")]),a._v(" "),s("ul",[s("li",[a._v("客户端发送：我是客户端，向你跑了一个白眼")]),a._v(" "),s("li",[a._v("服务器回复了你一个白眼，并给了你证书")]),a._v(" "),s("li",[a._v("客户端：我用公钥加密了随机数")]),a._v(" "),s("li",[a._v("服务器：我收到了你的随机数")]),a._v(" "),s("li",[a._v("客户端：我用会话密钥加密了http")]),a._v(" "),s("li",[a._v("服务器：我用会话密钥解密了http，并加密了相应")]),a._v(" "),s("li",[a._v("客户端：我收到了加密的响应")])]),a._v(" "),s("h4",{attrs:{id:"http"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[a._v("#")]),a._v(" http")]),a._v(" "),s("p",[a._v("获取公钥之后就可以用公钥加密数据并且发送了。")]),a._v(" "),s("h2",{attrs:{id:"多线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[a._v("#")]),a._v(" 多线程")]),a._v(" "),s("h3",{attrs:{id:"交替打印"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交替打印"}},[a._v("#")]),a._v(" 交替打印")]),a._v(" "),s("h2",{attrs:{id:"微服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[a._v("#")]),a._v(" 微服务")]),a._v(" "),s("h3",{attrs:{id:"服务注册"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务注册"}},[a._v("#")]),a._v(" 服务注册")]),a._v(" "),s("h3",{attrs:{id:"配置中心"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置中心"}},[a._v("#")]),a._v(" 配置中心")]),a._v(" "),s("h3",{attrs:{id:"熔断"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#熔断"}},[a._v("#")]),a._v(" 熔断")]),a._v(" "),s("h3",{attrs:{id:"限流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#限流"}},[a._v("#")]),a._v(" 限流")]),a._v(" "),s("h2",{attrs:{id:"其他"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),s("h3",{attrs:{id:"session和cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#session和cookie"}},[a._v("#")]),a._v(" session和cookie")]),a._v(" "),s("h3",{attrs:{id:"jwt的原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jwt的原理"}},[a._v("#")]),a._v(" jwt的原理")]),a._v(" "),s("h3",{attrs:{id:"在数据量比较大的情况下会有什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在数据量比较大的情况下会有什么问题"}},[a._v("#")]),a._v(" 在数据量比较大的情况下会有什么问题")]),a._v(" "),s("h2",{attrs:{id:"网络"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[a._v("#")]),a._v(" 网络")]),a._v(" "),s("h3",{attrs:{id:"三次握手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[a._v("#")]),a._v(" 三次握手")]),a._v(" "),s("h3",{attrs:{id:"四次挥手"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[a._v("#")]),a._v(" 四次挥手")]),a._v(" "),s("h3",{attrs:{id:"拥塞控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[a._v("#")]),a._v(" 拥塞控制")]),a._v(" "),s("h3",{attrs:{id:"差错控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#差错控制"}},[a._v("#")]),a._v(" 差错控制")]),a._v(" "),s("h3",{attrs:{id:"路由原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由原理"}},[a._v("#")]),a._v(" 路由原理")]),a._v(" "),s("h3",{attrs:{id:"分组有序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分组有序"}},[a._v("#")]),a._v(" 分组有序")])])}),[],!1,null,null,null);t.default=h.exports}}]);